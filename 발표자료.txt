Ppt 발표 내용 

시작페이지 

네 안녕하세요 10 월 14일   발표자 유한결 시작하도록 하곘습니다.
발표 시작하기 앞서 우선, 완성되지 않은 프로젝트로 발표를 마무리 한다는
점에 한해 먼저 죄송하다고 말씀을 드리고 싶습니다 . 그래도 구현된 부분과 그후 원했던 방향성을 기준으로 발표를 시작하도록 하겠습니다. 

(넘기고)
목차.

우선 들어가기 앞서, 목차에 대해 간단히 설명 드리도록 하곘습니다. 

기획 및 아이디어 단계를 시작으로 구상 및 파트 분담을 통해 나누고 
게발을 시작해 상의해 나가면서  프로젝트를 진행해  각자 완성된 부분들을 합쳐 
완성할 계획을 가지고 있었습니다.

그후 아쉬웠던 점이나 완료못한부분,사용한  플러그인등을 설명드리도록하겠습니다.

(넘기고)
아이디어 회의 .

아이디어 부분은 8월 말부터 9월 초 까지 카카오톡을 통해 결정했으며 여러 아이디어들 중 홍렬님의 아이디어인 지도 api 를 통한 sns 플랫폼을 기획했습니다. 지도의 좌표를 기록하고 이미지와 함께 저장해 sns 형태로 만드는 형태를 기획했습니다 .

와이어 프레임의 활용.

대화로 컨셉을 잡고 이어 나가기엔 어렵다는 판단을 했고 뚜렷한 방향성을 잡기위해 각자 와이어 프레임을 통해 구상을 했습니다 첫번째로는 제가   발사믹 이라는 와이어 프레임을 통해 만든 예제입니다. 간단하고 트랜드한 인스타 그램을 참고했습니다

(다음으로 넘기고.)
 (현근님 사진)
두번째로는 현근님이 만드신 와이어 프레임 예제입니다.비주얼 스튜디오와 html 및 기본 css 를 통해 구현을 한 모습입니다 .  웹사이트 스러운 디자인을 구현해 오셨어서 전반적인 색감은 현근님의 컨셉을 잡고 가고 그틀에 마춰서 저의 sns 형식을 메인으로 가져가기로 결정 했습니다.
(넘기고)

세부적인 컨셉.

그후 전반적인 컨셉이 결정되어 로그인 view 단 을 각자 만들어보기로 결정하고 추가적인 상의를 통해 메인 컨셉이 결정 되었습니다. 좌측 이미지는 랜덤으로 바뀌는 스크립트와 부트 스트랩을 활용해 로그인 폼을 만들었고, 현근님의 컨셉에 비슷해지도록 색깔이나 랜덤으로 나오는 사진들의 컨셉이 좀 더 맞도록 수정되어 세부컨셉으로 결정이 되었습니다.


(넘기고)
개발 시작,

컨셉이 결정되고 전반적인 회의나 상의는 카카오톡과 줌 회의를 통해 진행했습니다. 로그인 및 회원가입 부분은 현근님이, 사진 업로드와 그외 보여지는 부분은 제가, 지도 api 를 통해 좌표를 받아오는 부분은 홍렬님이 맡아서 진행되었습니다 각자 개발을 하면서 현근님과 저를 연결, 저와 홍렬님을 연결해 후에 마무리하도록 결정하고 진행 되었습니다.

(넘기고)

(전체 UML)
개발중 mvc 모델 을 공부하게되었습니다. 저희 팀의 경우 Mac 환경에서 개발을 하는데 어려움을 가지고 있었고 진행되는데 속도 적인 부분이나 오류가 많아 spring boot 환경에서 mvc 모델로 개발을 진횅하기로 후에 결정했습니다.
현재 이미지는 합쳐진 mvc 모델 구조를 UML 형태로 풀어논 모습입니다 .

(넘기고)

(현근님 설계부분)
먼저 회원가입 기술 부분을 구현하신 현근님 부분의 UML 구조 부분입니다.
구조적인 부분을 간단히 설명후 코드와 함께 진행해 보도록 하겠습니다 .
먼저 클라이언트에게 먼저 보여지는 회원가입 에서 계정 연동 웹사이트를 선택할수 있습니다.  

(넘기고 한 5초 보여줌 )
(회원가입 프론트)

그후 선택된 웹사이트의 계정 연동 사이트로 연동이 됩니다 . 예시로 카카오를 선택 했을때, 


(넘기고 )
(카카오 연동 사진)

카카오 연동 페이지로 이동 되는걸 볼수 있습니다 이를 통해 로그인 시 아이디 값을 키값과 벨류로 받아와 ,  계정으로 로그인이 되고, 그 값이 db 에 저장되는것을 확인할수 있습니다 

(넘기고)
(코드 사진들)

핵심적인 코드를 보겠습니다.
사이트별로 받을수 있는 호스트 번호와, 이메일 형식으로 데이터를 보낼수 있습니다 . 그후 각 홈페이지에서 일치하는 키값이 있다면 , 해당 사이트로 부터 데이터를 받아올수 있습니다 그후 서비스 파일에서 일치하는 이메일 형식에 마춰서 db에 저장되게 됩니다.

(넘기고)
(Db uml,디비 저장 사진)

앞서 말씀드렸다 시피  db에서는 서로 서브키 를 통해 관계를 가지게 됩니다. 
만약 회원가입한 신규 회원이라면 upload db에는 해당 이메일을 가진 데이터 업로드 기록이 없을것이고 , 로그인 된 회원이라면 외래키를 통해 검색된 db 속 upload 계시물을 메인페이지에 출력하게 됩니다.

(넘기고 3초 정지)
(메인페이지 사진)

그 후 올린 계시물들과 기록된 좌표들을 db로 부터 가져와 css안에서 제공하는 키프레임이라는 함수를 사용해 초단위로 이미지 슬라이드 기능과 직접적인 클릭을 통해 다음 이미지를 불러올수 있는 기능을 구현했고 슬라이드로 표출될 계획 이였으나, 홍렬님이 담당하신 좌표를 사용한 지도 api   부분은 준비가 안되 있어 단순히 설명으로 대체하는점 이해 부탁드리겠습니다.

(넘기고)
(내가 설계한 db UML)

전에 설명드렸다 시피 db에 저장된 고객 데이터를 통해 세션이 저장되었다고 말씀 드렸었습니다 그후 메인페이지에는 키값을 통해 접근을하고 개인 계시물을 접근 한다고 설명을 드렸었습니다.  이후 계시물 작성은 위치 및 지도 선택 이나 사진을 올리고 지도로 위치를 선택하는 두가지의 방식을 사용하려 했었습니다.

(넘기고)
(파일 따로 저장되는 사진이랑 db 사진)

먼저 사진을 선택해 후에 좌표를 선택하는 방식을 보도록 하겠습니다.
두번째 사진을 보시면 현재 db에는 아까 보신 db 저장소에 파일 관련 정보, 아이디 ,이메일, 업로드 날짜 , 위도와 경도 , 계시물 글 내용 등이 저장되어 있습니다 .그중 파일 이름과 파일 오리지널 이름, 파일 절대 경로를 직접적으로 setter를 통해 저장되어 있는 모습입니다.

(넘기고)
(컨트롤러랑 머스터치 사진)

이후 클라이언트에게 정보를 받고 form 으로 데이터를 받아 db에 저장되어 메인 페이지 계시물에 재출력 되는 코드입니다. 구현상으로 저장이 가능하나 
홍렬님이 담당하셨던  지도 api 가 준비되지  않으셔서  프로그램 성격상 절대적으로 위치가 저장이 되어야 하는 위도와 경도에  null 값을 받을수 없기에 구현할수 없었습니다.

(넘기고)
(사용한 플러그인 사진)

 그 외에 저는 고객에게 출력되는 계시물은 mustache 라는 플러그인을,
현근님은 타임리프라는 플러그인을 사용해 각자 다르게 view 단을 구현헀습니다. Spring boot 라는 구조 특성상 의존성만 추가하면 되기에 문제가 되지 않았습니다 . 

(한박자 쉬고)

우선적으로 spring 을 사용하다가 후에 spring boot 로 바꾸어서 시간적으로 촉박하다는 생각이 들었었습니다. 조금만 일찍 결정했으면 조금더 완성도 높은 프로젝트를 구현하고 발표할수  있지 않았을까 하는 아쉬움이 많이 컸습니다. 

이상으로 발표를 마치겠습니다 감사합니다.







 